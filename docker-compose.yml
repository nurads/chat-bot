version: '3.8'

services:
  # Database Services
  redis:
    image: redis:alpine
    container_name: chat-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - chat-network

  pg:
    image: postgres:alpine
    container_name: chat-postgres
    restart: unless-stopped
    ports:
      - "5480:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=bita-dev
      - POSTGRES_PASSWORD=bita-dev-admin
      - POSTGRES_DB=test-db
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    shm_size: 128mb
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U bita-dev -d test-db" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - chat-network

  # Backend Service
  chat-backend:
    build:
      context: ./chat-backend
      dockerfile: Dockerfile
      target: production
    container_name: chat-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://bita-dev:bita-dev-admin@pg:5432/test-db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CORS_ORIGIN=http://localhost:8080
    depends_on:
      pg:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - chat-network
    volumes:
      - backend_uploads:/app/uploads

  # Frontend Service
  chat-frontend:
    build:
      context: ./chat-frontend
      dockerfile: Dockerfile
      target: production
    container_name: chat-frontend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - VITE_API_URL=http://localhost:3001
      - VITE_WS_URL=http://localhost:3001
    depends_on:
      chat-backend:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - chat-network

networks:
  chat-network:
    driver: bridge
    name: chat-network

volumes:
  medias:
    name: chat-medias
  static:
    name: chat-static
  pg_data:
    name: chat-postgres-data
  redis_data:
    name: chat-redis-data
  backend_uploads:
    name: chat-backend-uploads
